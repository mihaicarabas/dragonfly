.\"
.\" Copyright (c) 2013 The DragonFly Project.  All rights reserved.
.\"
.\" This code is derived from software contributed to The DragonFly Project
.\" by Antonio Huete Jimenez <tuxillo@quantumachine.net>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. Neither the name of The DragonFly Project nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific, prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
.\" OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd September 9, 2013
.Dt LIBHAMMER 3
.Os
.Sh NAME
.Nm libhammer_stats_redo ,
.Nm libhammer_stats_undo ,
.Nm libhammer_stats_commits ,
.Nm libhammer_stats_inode_flushes ,
.Nm libhammer_stats_disk_write ,
.Nm libhammer_stats_disk_read ,
.Nm libhammer_stats_file_iopsw ,
.Nm libhammer_stats_file_iopsr ,
.Nm libhammer_stats_file_write ,
.Nm libhammer_stats_file_read ,
.Nm libhammer_stats_record_iterations ,
.Nm libhammer_stats_root_iterations ,
.Nm libhammer_stats_btree_iterations ,
.Nm libhammer_stats_btree_splits ,
.Nm libhammer_stats_btree_elements ,
.Nm libhammer_stats_btree_deletes ,
.Nm libhammer_stats_btree_inserts ,
.Nm libhammer_stats_btree_lookups ,
.Nm libhammer_stats_btree_searches ,
.Nm libhammer_btree_stats ,
.Nm libhammer_io_stats
.Nd libhammer statistics functions
.Sh LIBRARY
.Lb libhammer
.Sh SYNOPSIS
.In libhammer.h
.Ft int
.Fn libhammer_stats_redo "int64_t *value"
.Ft int
.Fn libhammer_stats_undo "int64_t *value"
.Ft int
.Fn libhammer_stats_commits "int64_t *value"
.Ft int
.Fn libhammer_stats_inode_flushes "int64_t *value"
.Ft int
.Fn libhammer_stats_disk_write "int64_t *value"
.Ft int
.Fn libhammer_stats_disk_read "int64_t *value"
.Ft int
.Fn libhammer_stats_file_iopsw "int64_t *value"
.Ft int
.Fn libhammer_stats_file_iopsr "int64_t *value"
.Ft int
.Fn libhammer_stats_file_write "int64_t *value"
.Ft int
.Fn libhammer_stats_file_read "int64_t *value"
.Ft int
.Fn libhammer_stats_record_iterations "int64_t *value"
.Ft int
.Fn libhammer_stats_root_iterations "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_iterations "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_splits "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_elements "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_deletes "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_inserts "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_lookups "int64_t *value"
.Ft int
.Fn libhammer_stats_btree_searches "int64_t *value"
.Ft int
.Fn libhammer_btree_stats "struct libhammer_btree_stats *bstats"
.Ft int
.Fn libhammer_io_stats "struct libhammer_io_stat *iostats"
.Sh DESCRIPTION
The set of functions described above will help to gather
statistics of the mounted
.Nm HAMMER
filesystems in the system.
.Pp
All the functions will take argument
.Ar value
to store the value for the sysctl requested, except for
.Fn libhammer_btree_stats ""
and
.Fn libhammer_io_stats ""
which will take structures to store groups of values.
.Sh RETURN VALUES
.Rv -std
.Sh SEE ALSO
.Xr HAMMER 5 ,
.Xr hammer 8 ,
.Sh AUTHORS
This manpage was written by
.An Antonio Huete Jimenez.
